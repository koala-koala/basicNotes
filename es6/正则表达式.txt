正则表达式-语法：

1、+号代表前面得字符必须至少出现一次；
runoo+b =》 runoob,runooob,runoooooob...

2、*号代表字符可以不出现，也可以出现一次或者多次；
runoo*b => runob,runoob,runoooooob...

3、？问号代表前面得字符最多只可以出现一次；
colou?r => color,colour

普通字符：
包括没有显示指定为元字符的所有可打印和不可打印字符，包括所有大写和小写字母、所有数字、所有标点符号和一些其他符号。

非打印字符：
非打印字符的转义序列，
\cx,匹配由x指明的控制字符，如：\cM匹配一个Control-M或者回车符；
\f,匹配一个换页符,等价于 \x0c \cL
\n,匹配一个换行符，等价于 \x0a \cJ
\r,回车符，\x0d \cM
\s,任何空白字符,包括空格、制表符、换页符等，等价于[\f\n\r\t\v]
\S,任何非空白字符，等价于[^ \f\n\r\t\v]
\t,一个制表符，等价于 \x09 \cl
\v,一个垂直制表符,等价于 \x0b \cK

特殊字符：
有特殊含义的字符，要匹配字符本身，前面加\转义。

$：匹配输入字符串的结尾位置。
()：标记一个子表达式的开始和结束位置。
*：匹配前面的子表达式零次或多次。
+：匹配前面得子表达式一次或多次。
.：匹配除了换行符\n之外的任何单字符。
[：标记一个中括号表达式的开始。
?：匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。
\：将下一个字符标记为或特殊字符、或愿意自负、或向后饮用、或八进制转义符。
^：匹配输入字符串的开始位置，除非在方括号表达式中使用，此时它表示不接受该字符集合。
{：标记限定符表达式的开始。
|：指明两项之间的一个选择。


限定符：
指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有*或+或{n}或{n,}或{n,m}共6种。
*   匹配前面的子表达式零次或多次。例如，zo* 能匹配 "z" 以及 "zoo"。* 等价于{0,}。
+   匹配前面的子表达式一次或多次。例如，'zo+' 能匹配 "zo" 以及 "zoo"，但不能匹配 "z"。+ 等价于 {1,}。
?   匹配前面的子表达式零次或一次。例如，"do(es)?" 可以匹配 "do" 或 "does" 中的"do" 。? 等价于 {0,1}。
{n} n 是一个非负整数。匹配确定的 n 次。例如，'o{2}' 不能匹配 "Bob" 中的 'o'，但是能匹配 "food" 中的两个 o。
{n,}    n 是一个非负整数。至少匹配n 次。例如，'o{2,}' 不能匹配 "Bob" 中的 'o'，但能匹配 "foooood" 中的所有 o。'o{1,}' 等价于 'o+'。'o{0,}' 则等价于 'o*'。
{n,m}   m 和 n 均为非负整数，其中n <= m。最少匹配 n 次且最多匹配 m 次。例如，"o{1,3}" 将匹配 "fooooood" 中的前三个 o。'o{0,1}' 等价于 'o?'。请注意在逗号和两个数之间不能有空格。


定位符：
定位符是您能够将正则表达式固定到行首或行尾，他们还使您能够创建这样的正则表达式，政协正则表达式出现在一个单词内、在一个单词的开头或者一个单词的结尾。
^ 和 $ 分别指字符串的开始与结束；
\b 描述单词的前或后边界，\B 表示非单词边界。


[a-z] //匹配所有的小写字母 
[A-Z] //匹配所有的大写字母 
[a-zA-Z] //匹配所有的字母 
[0-9] //匹配所有的数字 
[0-9\.\-] //匹配所有的数字，句号和减号 
[ \f\r\t\n] //匹配所有的白字符
[^a-z] //除了小写字母以外的所有字符 
[^\\\/\^] //除了(\)(/)(^)之外的所有字符 
[^\"\'] //除了双引号(")和单引号(')之外的所有字符
^[a-zA-Z0-9_]{1,}$      // 所有包含一个以上的字母、数字或下划线的字符串 
^[1-9][0-9]{0,}$        // 所有的正整数 
^\-{0,1}[0-9]{1,}$      // 所有的整数 
^[-]?[0-9]+\.?[0-9]+$   // 所有的浮点数
^[a-zA-Z0-9_]+$      // 所有包含一个以上的字母、数字或下划线的字符串 
^[1-9][0-9]*$        // 所有的正整数 
^\-?[0-9]+$          // 所有的整数 
^\-?[0-9]+\.?[0-9]*$ // 所有的浮点数














